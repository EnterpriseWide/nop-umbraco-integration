@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using ContentModels = Umbraco.Web.PublishedContentModels;
@using PagedList
@using PagedList.Mvc
@using NopStarterKit.Web.Helpers
@{
    Layout = "_Layout.cshtml";


    int page;

    if (!int.TryParse(Request["page"], out page))
    {
        page = 1;
    }

    var pageSize = 6;

    int pageSelect;
    if (int.TryParse(Request.QueryString["pageSize"], out pageSelect))
    {
        pageSize = pageSelect;
    }

    var root = Model.Content.AncestorOrSelf(1);
    var categories = root.Descendants("categoryOverview").FirstOrDefault().Children().Where(x => x.IsVisible());
    var products = root.Descendants("productsOverview").FirstOrDefault().Children().OrderBy(x => x.CreateDate);

    var list = products.Where(x => x.GetPropertyValue<IEnumerable<IPublishedContent>>("category").Any(y => y.Parent.Id == Model.Content.Id || y.Id == Model.Content.Id));

    var totalPages = (int)Math.Ceiling((double)list.Count() / (double)pageSize);

    if (page > totalPages)
    {
        page = totalPages;
    }

    else if (page < 1)
    {
        page = 1;
    }

    var currentlist = list.Skip((page - 1) * pageSize).Take(pageSize);

            }


<div class="master-column-wrapper">
    @Html.Partial("Categories")
    <div class="center-2">
        <div class="page category-page">
            <div class="page-title">
                <h1>@Model.Content.GetPropertyValue("pageTitle", Model.Content.Name)</h1>
            </div>
            <div class="page-body">
                @if (Model.Content.Children().Any())
                {
                    <div class="category-grid sub-category-grid">
                        <div class="item-grid">
                            @foreach (var subCategory in Model.Content.Children().Where(x => x.IsVisible()))
                            {
                                var title = subCategory.GetPropertyValue("pageTitle", subCategory.Name);
                                <div class="item-box">
                                    <div class="sub-category-item">
                                        <h2 class="title">
                                            <a href="@subCategory.Url" title="@title">
                                                @subCategory.Name
                                            </a>
                                        </h2>
                                        @if (subCategory.HasValue("image"))
                                        {
                                            var image = Umbraco.TypedMedia(subCategory.GetPropertyValue<int>("image"));
                                            <div class="picture">
                                                <a href="@subCategory.Url" title="@title">
                                                    <img alt="@title" src="@image.Url" title="@title" />
                                                </a>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                <div class="product-selectors">
                    <div class="product-viewmode">
                        <span>View as</span>
                        <a class="viewmode-icon grid selected" href="http://test-nop.uteam-dev.com/computers?viewmode=grid" title="Grid">Grid</a>
                        <a class="viewmode-icon list " href="http://test-nop.uteam-dev.com/computers?viewmode=list" title="List">List</a>
                    </div>
                    <div class="product-sorting">
                        <span>Sort by</span>
                        <select id="products-orderby" name="products-orderby" onchange="setLocation(this.value);">
                            <option selected="selected" value="http://test-nop.uteam-dev.com/computers?orderby=0">Position</option>
                            <option value="http://test-nop.uteam-dev.com/computers?orderby=5">Name: A to Z</option>
                            <option value="http://test-nop.uteam-dev.com/computers?orderby=6">Name: Z to A</option>
                            <option value="http://test-nop.uteam-dev.com/computers?orderby=10">Price: Low to High</option>
                            <option value="http://test-nop.uteam-dev.com/computers?orderby=11">Price: High to Low</option>
                            <option value="http://test-nop.uteam-dev.com/computers?orderby=15">Created on</option>
                        </select>
                    </div>
                    <div class="product-page-size">
                        <span>Display</span>
                        <select id="products-pagesize" name="products-pagesize" onchange="setLocation(this.value);">
                            <option @(pageSize == 3 ? "selected" : "") value="@(Model.Content.Url)?pagesize=3">3</option>
                            <option @(pageSize == 6 ? "selected" : "") value="@(Model.Content.Url)?pagesize=6">6</option>
                            <option @(pageSize == 9 ? "selected" : "") value="@(Model.Content.Url)?pagesize=9">9</option>
                        </select>
                        <span>per page</span>
                    </div>
                </div>

                @if (currentlist.Any())
                {
                    <div class="product-grid">
                        <div class="item-grid">
                            @foreach (var product in currentlist)
                            {
                                var nopId = Convert.ToInt32(product.GetPropertyValue("nopId"));
                                <div class="item-box">
                                    <div class="product-item" data-productid="10">
                                        @if (product.HasValue("productImage"))
                                        {
                                            var imagesList = product.GetPropertyValue<IEnumerable<IPublishedContent>>("productImage");
                                            <div class="picture">
                                                <a href="@product.Url" title="@product.Name">
                                                    <img alt="@product.Name" src="@imagesList.FirstOrDefault().Url" title="@product.Name" />
                                                </a>
                                            </div>
                                        }
                                        <div class="details">
                                            <h2 class="product-title">
                                                <a href="@product.Url">@product.Name</a>
                                            </h2>
                                            <div class="description">
                                                @product.GetPropertyValue("description")
                                            </div>
                                            <div class="add-info">
                                                <div class="prices">
                                                    <span class="price actual-price">$@Price.GetPrice(nopId)</span>
                                                </div>
                                                <div class="buttons">
                                                    <input type="button" value="Add to cart" class="button-2 product-box-add-to-cart-button" onclick="addProductToCart('@nopId'); return false;" />
                                                    @*<input type="button" value="Add to compare list" title="Add to compare list" class="button-2 add-to-compare-list-button" onclick="AjaxCart.addproducttocomparelist('/compareproducts/add/10');return false;" />
                                                    <input type="button" value="Add to wishlist" title="Add to wishlist" class="button-2 add-to-wishlist-button" onclick="AjaxCart.addproducttocart_catalog('/addproducttocart/catalog/10/2/1');return false;" />*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    if (totalPages > 1)
                    {

                        var list2 = new StaticPagedList<IPublishedContent>(currentlist, page, pageSize, list.Count());

    @Html.PagedListPager(list2, nextPage => Request.Path + "?page=" + nextPage + "&pagesize=" + pageSize,
                                                    new PagedListRenderOptions()
    {
        ContainerDivClasses = new[] { "pager" },
                                                        UlElementClasses = new[] { "paging-list" },
                                                        DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                                                        DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                                                        MaximumPageNumbersToDisplay = 5,
                                                        LinkToPreviousPageFormat = "Previous",
                                                        LinkToNextPageFormat = "Next",
                                                        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                                                        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                                        LinkToFirstPageFormat = "{0}",
                                                        LinkToLastPageFormat = "{0}"

                                                    })


                    }
                }
                else
                {
                    <div>
                        NoItems
                    </div>
                }

                @*<div class="pager">
                        <ul><li class="current-page"><span>1</span></li><li class="individual-page"><a href="/computers?pagenumber=2">2</a></li><li class="next-page"><a href="/computers?pagenumber=2">Next</a></li></ul>
                    </div>*@
            </div>
        </div>
    </div>
</div>
<script>
    function addProductToCart(nopId) {
        AjaxCart.addproducttocart_details('/umbraco/surface/NopShoppingCard/AddToShoppingCart?productId=' + nopId + '&quantity=' + 1, '#product-details-form')
    }

    $(document).ready(function () {
        $@*.get('/umbraco/surface/NopProduct/GetProductPrice?id=' + '@Model.Content.GetPropertyValue("nopId")').done(function (response) {
            $('.product-price span').html('$' + response.slice(0, -2))
        })*@
    })
</script>